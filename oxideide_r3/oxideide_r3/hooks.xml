<?xml version="1.0" encoding="utf-8" ?>
<OxideHooks xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Hooks>
    <OxideHook function="Init">
      <Description>Called when the plugin initalizes</Description>
    </OxideHook>

    <OxideHook function="PostInit">
      <Description>Called after all inits.</Description>
    </OxideHook>
    
    <OxideHook function="AddChatCommand">
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="NetUser" name="netuser">
          <Description>The user that sent the chat command</Description>
        </AParameterTemplate>
        <AParameterTemplate xsi:type="StringParameterTemplate" name="cmd">
          <Description>The command executed</Description>
        </AParameterTemplate>
        <AParameterTemplate xsi:type="ArrayParameterTemplate" name="args">
          <Description>The arguments the user passed to the command</Description>
          <ItemTemplate xsi:type="StringParameterTemplate" />
        </AParameterTemplate>
      </Parameters>
    </OxideHook>
    
    <OxideHook function="CanClientLogin">
      <Description>Called when a user is trying connect and their login needs verification. Returning a NetError will cancel default logic</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="ClientLogin" name="login"/>
      </Parameters>
    </OxideHook>

    <OxideHook function="CanOpenDoor">
      <Description>Called when a user tries to open a door. Return true to allow the door to be opened, false to block the door and nil to allow other plugins to act (you should return nil if in doubt!)</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="NetUser" name="netuser"/>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="BasicDoor" name="door" />
      </Parameters>
    </OxideHook>

    <OxideHook function="ModifyDamage">
      <Description>Called when any kind of entity takes damage. Modify the damage object and then return it to "apply" the modifications </Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="TakeDamage" name="takedamage"/>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="DamageEvent" name="damage" />
      </Parameters>
    </OxideHook>

    <OxideHook function="ModifyServerTags">
      <Description>Called by oxidecore.lua, add entries to the table to add tags </Description>
      <Parameters>
        <AParameterTemplate xsi:type="ObjectParameterTemplate" name="tags" />
      </Parameters>
    </OxideHook>

    <OxideHook function="OnAirdrop">
      <Description>Called when an airdrop is called. Returning a non-nil value will cancel default logic </Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="UnityEngine.Vector3" name="position" />
      </Parameters>
    </OxideHook>

    <OxideHook function="OnBlueprintUse">
      <Description>Called when a user tries to study a blueprint. Returning a non-nil value cancels default logic.</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="BlueprintDataBlock" name="datablock" />
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="IBlueprintItem" name="item" />
      </Parameters>
    </OxideHook>

    <OxideHook function="OnDatablocksLoaded">
      <Description>Called when all datablocks (item definitions) have been loaded. Loot tables and datablocks should be modified here.</Description>
    </OxideHook>

    <OxideHook function="OnDoorToggle">
      <Description>Called when a user attempts to open a door (oxidecore.lua handles this!). Returning a non-nil value will cancel default logic </Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="BasicDoor" name="door" />
        <AParameterTemplate xsi:type="NumberParameterTemplate" name="timestamp"/>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="Controllable" name="controllable" />
      </Parameters>
    </OxideHook>

    <OxideHook function="OnHurt">
      <Description>Called when any kind of entity has taken damage.</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="TakeDamage" name="takedamage"/>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="DamageEvent" name="damage" />
      </Parameters>
    </OxideHook>

    <OxideHook function="OnItemAdded">
      <Description>Called when an item was added to an inventory.</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="Inventory" name="inventory"/>
        <AParameterTemplate xsi:type="NumberParameterTemplate" name="slot"/>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="IInventoryItem" name="item"/>
      </Parameters>
    </OxideHook>

    <OxideHook function="OnItemRemoved">
      <Description>Called when an item was removed from an inventory.</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="Inventory" name="inventory"/>
        <AParameterTemplate xsi:type="NumberParameterTemplate" name="slot"/>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="IInventoryItem" name="item"/>
      </Parameters>
    </OxideHook>

    <OxideHook function="OnKilled">
      <Description>Called when an entity was killed by damage (player, zombie, structure piece etc).</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="TakeDamage" name="takedamage"/>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="DamageEvent" name="damage" />
      </Parameters>
    </OxideHook>

    <OxideHook function="OnProcessDamageEvent">
      <Description>Called when a damage event needs to be processed (oxidecore.lua handles this!). Returning a non-nil value will cancel default logic.</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="TakeDamage" name="takedamage"/>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="DamageEvent" name="damage" />
      </Parameters>
    </OxideHook>

    <OxideHook function="OnResearchItem">
      <Description>Called when a user tries to research an item. Returning a InventoryItem+MergeResult will cancel default logic.</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="ResearchToolItem&lt;&gt;" name="item"/>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="IInventoryItem" name="otherItem" />
      </Parameters>
    </OxideHook>

    <OxideHook function="OnRunCommand">
      <Description>Called when a command is run on the server (through rcon, server console or client console). Returning a boolean will cancel default logic.</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="Arg" name="arg"/>
        <AParameterTemplate xsi:type="BooleanParameterTemplate" name="wantreply" />
      </Parameters>
    </OxideHook>

    <OxideHook function="OnSpawnPlayer">
      <Description>Called just before the player character is spawned (run a 0 length timer to run code after the player character is spawned - a bit hacky but meh).</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="PlayerClient" name="playerclient"/>
        <AParameterTemplate xsi:type="BooleanParameterTemplate" name="usecamp" />
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="RustProto.Avatar" name="avatar"/>
      </Parameters>
    </OxideHook>

    <OxideHook function="OnStartCrafting">
      <Description>Called when a player tries to craft something. Returning a non-nil value will cancel default logic.</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="CraftingInventory" name="inventory"/>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="BlueprintDataBlock" name="blueprint"/>
        <AParameterTemplate xsi:type="NumberParameterTemplate" name="amount"/>
        <AParameterTemplate xsi:type="NumberParameterTemplate" name="starttime"/>
      </Parameters>
    </OxideHook>

    <OxideHook function="OnSteamGetTags">
      <Description>Handled by oxidecore.lua, use ModifyServerTags instead. Return a string to control the server's tags (comma delimited list of tags).</Description>
    </OxideHook>

    <OxideHook function="OnStructureDecay">
      <Description>Called when a structure tries to decay. Returning a non-nil value will cancel default logic.</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="StructureMaster" name="structure"/>
      </Parameters>
    </OxideHook>

    <OxideHook function="OnUserConnect">
      <Description>Called when a user connects (after CanClientLogin has let them past) </Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="NetUser" name="netuser"/>
      </Parameters>
    </OxideHook>

    <OxideHook function="OnUserDisconnect">
      <Description>Called when a user disconnects.</Description>
      <Parameters>
        <AParameterTemplate xsi:type="ReferenceParameterTemplate" templateName="NetUser" name="netuser"/>
      </Parameters>
    </OxideHook>

    <OxideHook function="ServerStart">
      <Description>Called after the server initialises, after Init and PostInit but before any other hook.</Description>
    </OxideHook>
    
  </Hooks>
</OxideHooks>